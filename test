function writeOn( term, sText )
    local w,h = term.getSize()        
    local x,y = term.getCursorPos()
    
    local nLinesPrinted = 0
    local function newLine()
        if y + 1 <= h then
            term.setCursorPos(1, y + 1)
        else
            term.scroll(1)
            term.setCursorPos(1, h)
        end
        x, y = term.getCursorPos()
        nLinesPrinted = nLinesPrinted + 1
    end
    
    -- Print the line with proper word wrapping
    while string.len(sText) > 0 do
        local whitespace = string.match( sText, "^[ t]+" )
        if whitespace then
            -- Print whitespace
            term.write( whitespace )
            x,y = term.getCursorPos()
            sText = string.sub( sText, string.len(whitespace) + 1 )
        end
        
        local newline = string.match( sText, "^n" )
        if newline then
            -- Print newlines
            newLine()
            sText = string.sub( sText, 2 )
        end
        
        local text = string.match( sText, "^[^ tn]+" )
        if text then
            sText = string.sub( sText, string.len(text) + 1 )
            if string.len(text) > w then
                -- Print a multiline word                
                while string.len( text ) > 0 do
                if x > w then
                    newLine()
                end
                    term.write( text )
                    text = string.sub( text, (w-x) + 2 )
                    x,y = term.getCursorPos()
                end
            else
                -- Print a word normally
                if x + string.len(text) > w then
                    newLine()
                end
                term.write( text )
                x,y = term.getCursorPos()
            end
        end
    end
    
    return nLinesPrinted
end



local m = peripheral.wrap("monitor_0")
local m2 = peripheral.wrap("monitor_1")
m.clear()
m.setCursorPos(1,1)
m.setTextScale(1)
while true do
  event, side, xPos, yPos = os.pullEvent("monitor_touch")
  writeOn(m, event .. " => Side: " .. tostring(side) .. ", " ..
    "X: " .. tostring(xPos) .. ", " ..
    "Y: " .. tostring(yPos))
  sleep(2)
  m.clear()
  m.setCursorPos(1,1)
end

m.write("Hello")
m2.write("Goodbye")
print(peripheral.getType("left"))
print(peripheral.getMethods("left"))
--local m =  peripheral.wrap("left")

--local monitor = peripheral.wrap("left")
--monitor.open("Goodbye Cruel World!")

